// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @unique
  age              Int?
  sex              UserSex?
  sexInterest      UserSex?
  city             String?
  name             String?
  bio              String?
  avatarUrl        String?
  rejectedUsers    String[]
  likedUsers       String[]
  isBlocked        Boolean   @default(false)
  isActive         Boolean   @default(true) // Is user in active search
  createdAt        DateTime  @default(now())
  isRegistered     Boolean   @default(false)
  lastCmd          String?
  localizationLang String    @default("en")
  reports          Reports[] @relation("ReportCreator")
  reportedTarget   Reports[] @relation("ReportedUser")

  @@index([name, city])
}

enum UserSex {
  male
  female
  none
}

model Reports {
  id             String   @id @unique @default(uuid())
  topic          String?
  description    String?
  createdAt      DateTime @default(now())
  user           User?    @relation("ReportCreator", fields: [userId], references: [id], onDelete: SetNull) //! REQUIRED WHILE CREATING
  userId         String?
  reportedUser   User?    @relation("ReportedUser", fields: [reportedUserId], references: [id], onDelete: SetNull) //! REQUIRED WHILE CREATING
  reportedUserId String?

  @@index([topic, userId, reportedUserId])
}
